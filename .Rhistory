class(vector())
class(vector(0))
class(vector(2))
class(1.5)
is.numeric(standard)
is.numeric(NULL)
devtools::document()
convertMassUnitsSI <- function(from, to, value) {
prefixes <- list(Y =	1e24, Z =	1e21, E =	1e18, P =	1e15, T =	1e12, G =	1e9,
M =	1e6, k = 1e3, h =	1e2, da = 1e1, d = 1e-1, c = 1e-2,
m =	1e-3, mu = 1e-6, n =	1e-9, p =	1e-12, f =	1e-15,
a =	1e-18, z =	1e-21, y =	1e-24)
if(grepl(from, to, fixed = TRUE)) {
i <- mapply(regexpr, from, to) - 1
un <- substr(to, i, i)
cVal <- value / prefixes[[un]]
return(cVal)
} else {
if(grepl(to, from, fixed = TRUE)) {
i <- mapply(regexpr, to, from) - 1
un <- substr(from, i, i)
cVal <- value * prefixes[[un]]
return(cVal)
} else {
un <- mf(c(from, to))
cVal <- value * prefixes[[un[1]]] / prefixes[[un[2]]]
return(cVal)
#return(c(prefixes[[un[1]]], prefixes[[un[2]]]))
}
}
}
devtools::document()
devtools::document()
devtools::document()
devtools::document()
rm(list = c("convertMassUnitsSI"))
devtools::document()
devtools::document()
devtools::document()
library(masscor)
devtools::document()
library(masscor)
convertMassUnitsSI
convertMassUnitsSI('mg', 'kg', 32)
devtools::load_all()
source('~/Dropbox/masscor/R/smallFunctions.R', echo=TRUE)
devtools::load_all()
library(masscor)
mf
devtools::load_all()
devtools::document()
source('~/Dropbox/masscor/R/smallFunctions.R', echo=TRUE)
devtools::document()
rm(list = c("addList", "mf"))
devtools::document()
library(masscor)
devtools::document()
convertMassUnitsSI(from = 'kg', to = 'mg', value = 5.8)
convertMassUnitsSI(from = 'kg', to = 'g', value = 5.8)
convertMassUnitsSI(from = 'g', to = 'kg', value = 5.8)
mf('kg', 'mg')
mf(c('kg', 'mg'))
library(masscor)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
mf()
library(masscor)
masscor::mf()
devtools::document()
library(masscor)
mf()
masscor::mf()
masscor:::mf()
source('~/Dropbox/masscor/R/smallFunctions.R', echo=TRUE)
airDensity(opt = 'CIMP.approx')
library(masscor)
airDensity(opt = 'CIMP.approx')
uncertAirDensities(opt = 'CIMP.approx')
uncertAirDensities(opt = 'CIMP.approx', u_Temp = 0.29, u_p = 1.01, u_h = 11.3)
uncertAirDensities(opt = 'CIMP.approx', u_Temp = 0.1, u_p = 0.665, u_h = 10)
airDensity(opt = 'CIMP2007')
uncertAirDensities(opt = 'CIMP2007')
uncertAirDensities(opt = 'CIMP2007', u_Temp = 0.29, u_p = 1.01, u_h = 11.3)
uncertAirDensities(opt = 'CIMP2007', u_Temp = 0.1, u_p = 0.665, u_h = 10)
convMass(reading = 12483.5, units = 'mg', calibCert = minimalCert)
convMass(reading = 12483.5, units = 'mg', calibCert = minimalCert) + 1
convMass(reading = 12483.5, units = 'mg', calibCert = minimalCert) -> cc
cc
library(masscor)
convMass(reading = 12.4835, calibCert = minimalCert)
convMass(reading = 12.4835, calibCert = minimalCert) + 12
convMass(reading = 12.4835, calibCert = minimalCert) == 12.4837
library(masscor)
convMass(reading = 12.4835, calibCert = minimalCert)
convMass(reading = 12.4835, calibCert = minimalCert)
library(masscor)
convMass(reading = 12.4835, calibCert = minimalCert)
library(masscor)
convMass(reading = 12.4835, calibCert = minimalCert)
library(masscor)
convMass(reading = 12.4835, calibCert = minimalCert)
library(masscor)
convMass(reading = 12.4835, calibCert = minimalCert)
#' Guide to the expression of Uncertainty in Measurement (GUM) impplemented in R by the package []
#' @author Cristhian Paredes, \email{craparedesca@@unal.edu.co}
#' @references
#' references references
#' @keywords internal
#' @docType package
#' @name masscor-package
NULL
citation(propagate)
citation('propagate')
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
usethis::use_test("convertMassUnitsSI")
test_that("convertMassUnitsSI", {
expect_equal(convertMassUnitsSI(2, 'mg', 'kg'), 2e-6)
})
library(masscor)
test_that("convertMassUnitsSI", {
expect_equal(convertMassUnitsSI(2, 'mg', 'kg'), 2e-6)
expect_equal(convertMassUnitsSI(2, 'mg', 'ug'), 2e3)
})
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
library(masscor)
library(masscor)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
library(masscor)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
library(masscor)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
library(masscor)
devtools::build_manual()
devtools::build_manual()
c('deg.C', 'hPa', '%')
devtools::build_manual()
devtools::build_manual()
library(masscor)
devtools::build_manual()
devtools::build_manual()
library(masscor)
library(masscor)
devtools::build_manual()
library(masscor)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
library(masscor)
devtools::build_manual()
devtools::build_manual()
library(masscor)
devtools::build_manual()
devtools::build_manual()
library(masscor)
library(masscor)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
library(masscor)
devtools::build_manual()
citation('devtools')
citation('testthat')
citation('usethis')
library(masscor)
MABC(rho_s = 7820, rho_w = 8100, rho_air = 1.1)
round(MABC(rho_s = 7820, rho_w = 8100, rho_air = 1.1), 12)
round(MABC(rho_s = 7820, rho_w = 8100, rho_air = 1.1), 100)
data(minimalCert)
convMass(reading = 12.4835, calibCert = minimalCert)
devtools::build_manual()
library(masscor)
library(masscor)
devtools::build_manual()
devtools::build_manual()
library(masscor)
devtools::build_manual()
library(masscor)
citation(propagate)
citation('propagate')
library(masscor)
library(masscor)
airDensity(model = 'CIMP.approx')
uncertAirDensity(model = 'CIMP.approx')
library(masscor)
library(masscor)
MT.XPE.204
d <- stop('sdfg')
d
library(masscor)
data(MT.XPE.204)
plot(MT.XPE.204)
data(MT.XPE.204)
print(MT.XPE.204)
x <- MT.XPE.204
mass <- x$massSTD
indError <- convertMassUnitsSI(value = x$indError, from = x$standardUnits, to = x$originalUnits[2])
x$indError
x$standardUnits
x$originalUnits[2]
x$originalUnits
x$originalUnits
x
library(masscor)
library(masscor)
x <- MT.XPE.204
x$originalUnits
x
print(x, plot = FALSE)
setwd("~/Dropbox/1_masscor/R")
setwd("~/Dropbox/1_masscor")
x$d
usethis::use_data(minimalCert)
usethis::use_data(minimalCert, overwrite = TRUE)
usethis::use_data(MT.XPE.204.Cert, overwrite = TRUE)
usethis::use_data(MT.XPE.204, overwrite = TRUE)
data(MT.XPE.204)
plot(MT.XPE.204)
MT.XPE.204$balanceID
data(MT.XPE.204)
plot(MT.XPE.204)
library(masscor)
data(MT.XPE.204)
plot(MT.XPE.204)
data("minimalCert")
minimalCert
View(minimalCert)
View(minimalCert)
minimalCert <- calibCert(massSTD = c(5, 20), #[g]
indError = c(-0.2, -0.1), #[mg]
uncert = c(0.4, 0.41),
d = 0.1, #[mg]
units = c('g', 'mg', 'mg', 'mg'))
minimalCert <- calibCert(massSTD = c(5, 20), #[g]
indError = c(-0.2, -0.1), #[mg]
uncert = c(0.4, 0.41),
d = 0.1, #[mg]
units = c('g', 'mg', 'mg', 'mg'))
library(masscor)
minimalCert
View(minimalCert)
minimalCert <- calibCert(massSTD = c(5, 20), #[g]
indError = c(-0.2, -0.1), #[mg]
uncert = c(0.4, 0.41),
d = 0.1, #[mg]
units = c('g', 'mg', 'mg', 'mg'))
minimalCert
library(masscor)
calibCert(massSTD = c(5, 20), #[g]
indError = c(-0.2, -0.1), #[mg]
uncert = c(0.4, 0.41),
d = 0.1, #[mg]
units = c('g', 'mg', 'mg', 'mg'))
library(masscor)
data(MT.XPE.204)
plot(MT.XPE.204)
MT.XPE.204 <- calibCert(balanceID = 'MT XPE 204', massSTD = massSTD,
indError = indError, uncert = uncert, d = d,
units = c('g', 'mg', 'mg', 'mg'),
classSTD = 'E2',
certSTD = '1473 D-K 17296',
barPress = c(750.4, 751.0), ## [hPa]
ambTemp = c(17.4, 17.9), ## [deg.C]
relHumid = c(70.5, 71.4), ## [%]
unitsENV = c('hPa', 'deg.C', '%'),
institution = 'Instituto Nacional de Metrología de Colombia',
date = '2021/03/18')
MT.XPE.204 <- calibCert(balanceID = 'MT XPE 204', massSTD = massSTD,
indError = indError, uncert = uncert, d = d,
units = c('g', 'mg', 'mg', 'mg'),
classSTD = 'E2', certSTD = '1473 D-K 17296',
p = c(750.4, 751.0), ## [hPa]
Temp = c(17.4, 17.9), ## [deg.C]
h = c(70.5, 71.4), ## [%]
unitsENV = c('hPa', 'deg.C', '%'),
institution = 'Instituto Nacional de Metrología de Colombia',
date = '2021/03/18')
massSTD <- c(0.01, 0.5, 1, 10, 20, 50, 100, 120, 150, 200, 220)  ## [g]
indError <- c(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.2, -0.2) ## [mg]
uncert <- c(0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2, 0.3, 0.3, 0.4, 0.5) / 2 ## [mg]
d <- 0.1 ## [mg]
MT.XPE.204 <- calibCert(balanceID = 'MT XPE 204', massSTD = massSTD,
indError = indError, uncert = uncert, d = d,
units = c('g', 'mg', 'mg', 'mg'),
classSTD = 'E2', certSTD = '1473 D-K 17296',
p = c(750.4, 751.0), ## [hPa]
Temp = c(17.4, 17.9), ## [deg.C]
h = c(70.5, 71.4), ## [%]
unitsENV = c('hPa', 'deg.C', '%'),
institution = 'Instituto Nacional de Metrología de Colombia',
date = '2021/03/18')
usethis::use_data(MT.XPE.204, overwrite = TRUE)
data(MT.XPE.204)
print(MT.XPE.204)
library(masscor)
data(MT.XPE.204)
MT.XPE.204
MT.XPE.204 <- calibCert(balanceID = 'MT XPE 204', massSTD = massSTD,
indError = indError, uncert = uncert, d = d,
units = c('g', 'mg', 'mg', 'mg'),
classSTD = 'E2', certSTD = '1473 D-K 17296',
p = c(750.4, 751.0), ## [hPa]
Temp = c(17.4, 17.9), ## [deg.C]
h = c(70.5, 71.4), ## [%]
unitsENV = c('hPa', 'deg.C', '%'),
institution = 'Instituto Nacional de Metrología de Colombia',
date = '2021/03/18')
MT.XPE.204
library(masscor)
MT.XPE.204 <- calibCert(balanceID = 'MT XPE 204', massSTD = massSTD,
indError = indError, uncert = uncert, d = d,
units = c('g', 'mg', 'mg', 'mg'),
classSTD = 'E2', certSTD = '1473 D-K 17296',
p = c(750.4, 751.0), ## [hPa]
Temp = c(17.4, 17.9), ## [deg.C]
h = c(70.5, 71.4), ## [%]
unitsENV = c('hPa', 'deg.C', '%'),
institution = 'Instituto Nacional de Metrología de Colombia',
date = '2021/03/18')
MT.XPE.204
massSTD <- c(0.01, 0.5, 1, 10, 20, 50, 100, 120, 150, 200, 220)        ## [g]
indError <- c(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.2, -0.2) ## [mg]
uncert <- c(0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2, 0.3, 0.3, 0.4, 0.5) / 2 ## [mg]
d <- 0.1                                                               ## [mg]
Balance.D1 <- calibCert(balanceID = 'Balance.D1', massSTD = massSTD,
indError = indError, uncert = uncert, d = d,
units = c('g', 'mg', 'mg', 'mg'))
print(Balance.D1)
plot(Balance.D1)
library(masscor)
massSTD <- c(0.01, 0.5, 1, 10, 20, 50, 100, 120, 150, 200, 220)        ## [g]
indError <- c(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.2, -0.2) ## [mg]
uncert <- c(0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2, 0.3, 0.3, 0.4, 0.5) / 2 ## [mg]
d <- 0.1                                                               ## [mg]
Balance.D1 <- calibCert(balanceID = 'Balance.D1', massSTD = massSTD,
indError = indError, uncert = uncert, d = d,
units = c('g', 'mg', 'mg', 'mg'))
print(Balance.D1)
plot(Balance.D1)
if (y0line) abline(h = 0)
abline(h = 0)
minimalCert
print(min)
minimalCert <- calibCert(massSTD = c(5, 20), #[g]
indError = c(-0.2, -0.1), #[mg]
uncert = c(0.4, 0.41),
d = 0.1, #[mg]
units = c('g', 'mg', 'mg', 'mg'))
minimalCert
usethis::use_data(minimalCert, overwrite = TRUE)
MT.XPE.204 <- calibCert(balanceID = 'MT XPE 204', massSTD = massSTD,
indError = indError, uncert = uncert, d = d,
units = c('g', 'mg', 'mg', 'mg'),
classSTD = 'E2', certSTD = '1473 D-K 17296',
p = c(750.4, 751.0), ## [hPa]
Temp = c(17.4, 17.9), ## [deg.C]
h = c(70.5, 71.4), ## [%]
unitsENV = c('hPa', 'deg.C', '%'),
institution = 'Instituto Nacional de Metrología de Colombia',
date = '2021/03/18')
MT.XPE.204
minimalCert
