# 15 de abril de 2021
12.3820, 12.3861, 12.4334, 12.3676, NA     , 12.4399, NA     , 12.3948, 12.5561, 12.4203,
12.5105, 12.3874, 12.3723, 12.3743, 12.3757, 12.3939, 12.4305, 12.4046, 12.3989, 12.4026,
# 19 de abril de 2021
12.4016, 12.3157, 12.2649, 12.3054, 12.1778, 12.2979, NA     , 12.3041, 12.2901, 12.2936,
12.2591, 12.2881, 12.2746, 12.2620, 12.3217, 12.2891
)
n1 <- 8
n2 <- 20
n3 <- 16
Vbf <- c(
# 14 de abril de 2021
4, 8, 12, 16, 16, 12, 9, 6,
# 15 de abril de 2021
3.5, 4, 7, 10, 13, 7, 13, 7, 13, 4, 10, 3.5, 13, 4, 13, 3.5, 7, 16, 4, 4,
# 19 de abril de 2021
7, 1.4*5, 1.4*5, 7, 18.*5, 7, 1.8*5, 1.4*5) # mL
pHfinal <- c(rep(NA, 8))
(mmolBf <- 0.63573 * Vbf) # [mmol] asumiendo rho = 1. Archivo 20210415-AcidoBase.R
(mmolCa <- c_Ca_Pro * masasCa) # milimoles de calcio
mmolBf/mmolCa
(ConcBf <- (0.63573 * Vbf) / (Vbf + 5)) # [mol / L]
(relCaEDTA <- masasCa * c_Ca_Pro / VeqTP * 1000)
# ENsayos lunes 19 con varios buffers
# masasCa[(n1+n2+1):(n1+n2+n3)]
# VeqTP[(n1+n2+1):(n1+n2+n3)]
describe(relCaEDTA[(n1+n2+1):(n1+n2+n3)])#[-c(3,5)])
plot(relCaEDTA[(n1+n2+1):(n1+n2+n3)])#[-c(3,5)])
describe(relCaEDTA[(n1+n2+1):(n1+n2+n3)][-c(3,5)])
plot(relCaEDTA[(n1+n2+1):(n1+n2+n3)][-c(3,5)])
# ENsayos lunes 19 con varios buffers
# masasCa[(n1+n2+1):(n1+n2+n3)]
# VeqTP[(n1+n2+1):(n1+n2+n3)]
describe(relCaEDTA[(n1+n2+1):(n1+n2+n3)])#[-c(3,5)])
plot(relCaEDTA[(n1+n2+1):(n1+n2+n3)])#[-c(3,5)])
describe(relCaEDTA[(n1+n2+1):(n1+n2+n3)][-c(3,5, 11)])
describe(relCaEDTA[(n1+n2+1):(n1+n2+n3)][-c(3, 5, 11)])
plot(relCaEDTA[(n1+n2+1):(n1+n2+n3)][-c(3, 5, 11)])
library(ggplot2)
library(propagate)
library(titRation)
PurezaPbNO3.2 <- c(0.99999, 0.00005/sqrt(3))
(x_Pb   <- propagate(expr = expression(Pb / (Pb + 2*(N + 3 * O))),
data = cbind(Pb = runif(n = 1e6, min = 207.2-0.1, max = 207.2+0.1),
N = runif(n = 1e6, min = 14.00643, max = 14.00728),
O = runif(n = 1e6, min = 15.99903, max = 15.99977)),
do.sim = TRUE, nsim = 1e5, cov = FALSE))
plot(x_Pb)
summary(x_Pb)
(c_Pb.Std   <- propagate(expr = expression(v_Pb / mw_Pb),
data = cbind(v_Pb = c(v_Pb.Std$prop[1], v_Pb.Std$prop[3]),
mw_Pb = c(207.2, 0.1/sqrt(3))),
do.sim = FALSE))
VeqTubbs <- c(
# 14 de abril de 2021
4.8281, 4.8321, 4.8679, 4.8567, 4.8568, 4.8306, 4.8522, 4.8589, 4.8672)
rel1 <- masasPb / VeqTubbs
(v_Pb.Std  <- propagate(expr = expression(m_PbNO3.2 * w_PbNO3.2 * x_Pb / (mf_Pb - m0_Recip)),
data = cbind(m_PbNO3.2 = c(0.79899, 0.00012), w_PbNO3.2 = PurezaPbNO3.2,
x_Pb = c(x_Pb$prop[1], x_Pb$prop[3]), mf_Pb= c(0.55619, 0.00002),
m0_Recip= c(0.0562238, 0.00000012)),
do.sim = FALSE))
masasPb <- c( # Masas (g) de las al'icuotas de
# 14 de abril de 2021
10.0539, 10.0075, 10.0524, 10.0266, 10.0361, 10.0086, 10.0402, 10.0254, 10.0451)
describe(rel1)
plot(rel1)
outliers::grubbs.test(rel1)
rel1[1] <- NA
describe(rel1)
plot(rel1)
Vtar <- c(240, 960, 2000, 3000, 240, rep(480, 4)) # uL
Vbuf <- c(rep(5, 6), 5, 7, 9)
plot(rel1[2:6] ~ Vtar[2:6], pch = as.character(2:6))
plot(rel1[7:9] ~ Vbuf[7:9], pch = as.character(7:9))
factors07Abril <- c(rep('Amon5.5_HCl', 5), rep('Amon5.6_Tar1', 4), rep('Amon8_Tar2', 5),
rep('Acet2.5', 3), rep('Acet4', 3))
(EDTA1 <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20])
describe(EDTA1)
setwd("~/Dropbox/0-INM.V2/INM_TitulacionesEDTA/Volumetricas848TitrinoPlus/Plomo/")
path <- './dat2021.04.07 .potenciometrias/'
files <- paste0(path, list.files(path = path))
# Linea final de los datos: grep("DETERM", readLines(files[1]), value = FALSE) - 2 - 25
rawCurves <- list()
Veq.void <- rep(NA, length(files))
VeqComplete <- data.frame(Veq1stDer1000 = Veq.void, Veq1stDer10000 = Veq.void, Veq1stDer100000 = Veq.void, Veq1stDer1000000 = Veq.void,
Veq1stDer10000trim = Veq.void#,
#Veq2ndDer1000 = Veq.void, Veq2ndDer10000 = Veq.void, Veq2ndDer100000 = Veq.void, Veq2ndDer1000000 = Veq.void
)
#pdf('TitPb070421.pdf', width = 18, height = 6)
factorsTotal <- c(paste0('7Abr.', factors07Abril))
for (i in 1:20) {
rawCurves[[i]]   <- lims2t.curve(file = files[i], nrows = suppressWarnings(grep("DETERM", readLines(files[i]), value = FALSE)) - 3 - 25,
length = 1000, plot = FALSE)
#plotCurve(curve = rawCurves[[i]], main = paste0(i, ': ', factorsTotal[i]), plot = FALSE)# + xlim(c(4.9))
#    VeqComplete$Veq1stDer1000[i]    <- EP.1stDer(curve = rawCurves[[i]], length = 1000)
(VeqComplete$Veq1stDer10000[i]   <- EP.1stDer(curve = rawCurves[[i]], length = 10000, plot = TRUE))
(VeqComplete$Veq1stDer10000trim[i]   <- EP.1stDer(curve = rawCurves[[i]], length = 10000, sub = TRUE, plot = TRUE))
#    VeqComplete$Veq1stDer100000[i]  <- EP.1stDer(curve = rawCurves[[i]], length = 100000)
#    VeqComplete$Veq1stDer1000000[i] <- EP.1stDer(curve = rawCurves[[i]], length = 1000000)
}
(r2Fd <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000[1:20])
r2Fd[1] <- NA
(r2Fdtr <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000trim[1:20])
r2Fdtr[1] <- NA
(r2Tb <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20])
(VeqComplete$Veq1stDer10000[1:20] - VeqComplete$Veq1stDer10000trim[1:20])*1000
(VeqComplete$Veq1stDer10000[1:20] - VeqTubbs[1:20])*1000
(VeqComplete$Veq1stDer10000trim[1:20] - VeqTubbs[1:20])*1000
describe(r2Fd)
describe(r2Fdtr)
describe(r2Tb)
abs((r2Fd - r2Tb)/r2Fd * 100) # Diferencia entre las concentraciones calculadas con los distintos m'etodos (%)
abs((r2Fdtr - r2Tb)/r2Fdtr * 100) # Diferencia entre las concentraciones calculadas con los distintos m'etodos (%)
par(mfrow = c(1, 3))
boxplot(r2Tb ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fd ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fdtr ~ factors07Abril, ylim = c(0.009925, 0.00995))
setwd("~/Dropbox/0-INM.V2/INM_TitulacionesEDTA/Volumetricas848TitrinoPlus/Plomo/")
setwd("~/CristhianParedes/INM_TitulacionesEDTA/Volumetricas848TitrinoPlus/Plomo")
path <- './dat2021.04.07 .potenciometrias/'
files <- paste0(path, list.files(path = path))
# Linea final de los datos: grep("DETERM", readLines(files[1]), value = FALSE) - 2 - 25
rawCurves <- list()
Veq.void <- rep(NA, length(files))
VeqComplete <- data.frame(Veq1stDer1000 = Veq.void, Veq1stDer10000 = Veq.void, Veq1stDer100000 = Veq.void, Veq1stDer1000000 = Veq.void,
Veq1stDer10000trim = Veq.void#,
#Veq2ndDer1000 = Veq.void, Veq2ndDer10000 = Veq.void, Veq2ndDer100000 = Veq.void, Veq2ndDer1000000 = Veq.void
)
#pdf('TitPb070421.pdf', width = 18, height = 6)
factorsTotal <- c(paste0('7Abr.', factors07Abril))
for (i in 1:20) {
rawCurves[[i]]   <- lims2t.curve(file = files[i], nrows = suppressWarnings(grep("DETERM", readLines(files[i]), value = FALSE)) - 3 - 25,
length = 1000, plot = FALSE)
#plotCurve(curve = rawCurves[[i]], main = paste0(i, ': ', factorsTotal[i]), plot = FALSE)# + xlim(c(4.9))
#    VeqComplete$Veq1stDer1000[i]    <- EP.1stDer(curve = rawCurves[[i]], length = 1000)
(VeqComplete$Veq1stDer10000[i]   <- EP.1stDer(curve = rawCurves[[i]], length = 10000, plot = TRUE))
(VeqComplete$Veq1stDer10000trim[i]   <- EP.1stDer(curve = rawCurves[[i]], length = 10000, sub = TRUE, plot = TRUE))
#    VeqComplete$Veq1stDer100000[i]  <- EP.1stDer(curve = rawCurves[[i]], length = 100000)
#    VeqComplete$Veq1stDer1000000[i] <- EP.1stDer(curve = rawCurves[[i]], length = 1000000)
}
(r2Fd <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000[1:20])
(r2Fd <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000[1:20])
r2Fd[1] <- NA
(r2Fdtr <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000trim[1:20])
r2Fdtr[1] <- NA
(r2Tb <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20])
(VeqComplete$Veq1stDer10000[1:20] - VeqComplete$Veq1stDer10000trim[1:20])*1000
(VeqComplete$Veq1stDer10000[1:20] - VeqTubbs[1:20])*1000
(VeqComplete$Veq1stDer10000trim[1:20] - VeqTubbs[1:20])*1000
describe(r2Fd)
describe(r2Fdtr)
describe(r2Tb)
(r2Fd <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000[1:20])
c_Pb.Std
(c_Pb.Std   <- propagate(expr = expression(v_Pb / mw_Pb),
data = cbind(v_Pb = c(v_Pb.Std$prop[1], v_Pb.Std$prop[3]),
mw_Pb = c(207.2, 0.1/sqrt(3))),
do.sim = FALSE))
(v_Pb.Std  <- propagate(expr = expression(m_PbNO3.2 * w_PbNO3.2 * x_Pb / (mf_Pb - m0_Recip)),
data = cbind(m_PbNO3.2 = c(0.79899, 0.00012), w_PbNO3.2 = PurezaPbNO3.2,
x_Pb = c(x_Pb$prop[1], x_Pb$prop[3]), mf_Pb= c(0.55619, 0.00002),
m0_Recip= c(0.0562238, 0.00000012)),
do.sim = FALSE))
PurezaPbNO3.2 <- c(0.99999, 0.00005/sqrt(3))
(x_Pb   <- propagate(expr = expression(Pb / (Pb + 2*(N + 3 * O))),
data = cbind(Pb = runif(n = 1e6, min = 207.2-0.1, max = 207.2+0.1),
N = runif(n = 1e6, min = 14.00643, max = 14.00728),
O = runif(n = 1e6, min = 15.99903, max = 15.99977)),
do.sim = TRUE, nsim = 1e5, cov = FALSE))
plot(x_Pb)
summary(x_Pb)
(v_Pb.Std  <- propagate(expr = expression(m_PbNO3.2 * w_PbNO3.2 * x_Pb / (mf_Pb - m0_Recip)),
data = cbind(m_PbNO3.2 = c(0.79899, 0.00012), w_PbNO3.2 = PurezaPbNO3.2,
x_Pb = c(x_Pb$prop[1], x_Pb$prop[3]), mf_Pb= c(0.55619, 0.00002),
m0_Recip= c(0.0562238, 0.00000012)),
do.sim = FALSE))
(c_Pb.Std   <- propagate(expr = expression(v_Pb / mw_Pb),
data = cbind(v_Pb = c(v_Pb.Std$prop[1], v_Pb.Std$prop[3]),
mw_Pb = c(207.2, 0.1/sqrt(3))),
do.sim = FALSE))
masasPb <- c( # Masas (g) de las al'icuotas de
# 14 de abril de 2021
10.0539, 10.0075, 10.0524, 10.0266, 10.0361, 10.0086, 10.0402, 10.0254, 10.0451)
VeqTubbs <- c(
# 14 de abril de 2021
4.8281, 4.8321, 4.8679, 4.8567, 4.8568, 4.8306, 4.8522, 4.8589, 4.8672)
rel1 <- masasPb / VeqTubbs
describe(rel1)
plot(rel1)
outliers::grubbs.test(rel1)
rel1[1] <- NA
describe(rel1)
plot(rel1)
Vtar <- c(240, 960, 2000, 3000, 240, rep(480, 4)) # uL
Vbuf <- c(rep(5, 6), 5, 7, 9)
plot(rel1[2:6] ~ Vtar[2:6], pch = as.character(2:6))
plot(rel1[7:9] ~ Vbuf[7:9], pch = as.character(7:9))
factors07Abril <- c(rep('Amon5.5_HCl', 5), rep('Amon5.6_Tar1', 4), rep('Amon8_Tar2', 5),
rep('Acet2.5', 3), rep('Acet4', 3))
(EDTA1 <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20])
describe(EDTA1)
(r2Fd <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000[1:20])
r2Fd[1] <- NA
(r2Fdtr <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000trim[1:20])
r2Fdtr[1] <- NA
(r2Tb <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20])
(VeqComplete$Veq1stDer10000[1:20] - VeqComplete$Veq1stDer10000trim[1:20])*1000
(VeqComplete$Veq1stDer10000[1:20] - VeqTubbs[1:20])*1000
(VeqComplete$Veq1stDer10000trim[1:20] - VeqTubbs[1:20])*1000
describe(r2Fd)
describe(r2Fdtr)
describe(r2Tb)
abs((r2Fd - r2Tb)/r2Fd * 100) # Diferencia entre las concentraciones calculadas con los distintos m'etodos (%)
abs((r2Fdtr - r2Tb)/r2Fdtr * 100) # Diferencia entre las concentraciones calculadas con los distintos m'etodos (%)
par(mfrow = c(1, 3))
boxplot(r2Tb ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fd ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fdtr ~ factors07Abril, ylim = c(0.009925, 0.00995))
plot(r2Fd, ylim = c(0.009925, 0.00995))
abline(v = c(0.5, 5.5, 9.5, 14.5, 17.5, 20.5))
plot(r2Tb, ylim = c(0.009925, 0.00995))
abline(v = c(0.5, 5.5, 9.5, 14.5, 17.5, 20.5))
plot(r2Fdtr, ylim = c(0.009925, 0.00995))
abline(v = c(0.5, 5.5, 9.5, 14.5, 17.5, 20.5))
summary(modelo2 <- aov(r2Fdtr ~ factors07Abril))
summary(modelo1 <- aov(r2Tb ~ factors07Abril))
TukeyHSD(modelo1)
t.test(r2Fd[18:20], r2Fd[15:17])
t.test(r2Fd[1:5], r2Fd[6:9])
t.test(r2Fd[6:9], r2Fd[10:13])
t.test(r2Tb[18:20], r2Tb[15:17])
t.test(r2Tb[1:5], r2Tb[6:9])
t.test(r2Tb[6:9], r2Tb[10:13])
describe(r2Fd[1:5]) # HCl
describe(r2Fd[6:9]) # Amonio (5.5 mL) y tartrato (240 uL)
describe(r2Fd[10:14]) # Amonio (8 mL) y tartrato (240 uL)
describe(r2Fd[6:14])
describe(r2Fdtr[6:14])
describe(r2Tb[6:14])
mean(masasPb[6:14]) * c_Pb.Std$prop[1] / mean(VeqTubbs[6:14])
mean(masasPb[6:14] * c_Pb.Std$prop[1] / VeqTubbs[6:14])
c_EDTA_exp <- expression(((m_PbNO3.2 * x_Pb_nit * W_PbNO3.2 * B_PbNO3.2 /
((mf_Pb_ref * B_Pb_ref) - (m0_Recip * B_m0_Recip))) / am_Pb) * ((m_Pb_ref * B_Pb_ref) / (V_EDTA_ref - V_blank)))
(u_mtXPE204 <- sqrt(2)*sqrt(0.0001^2 + 0.00007^2 + 0.0002^2)) # [g], incertidumbre mediciones de masa en mt XPE204 #preguntar a Andr'es o Diego
(u_mtXPE205 <- sqrt(2)*sqrt(0.00005^2 + 0.00002^2 + 0.00005^2)) # [g], incertidumbre mediciones de masa en mt XPE205
(u_mtXP2002 <- sqrt(2)*sqrt(0.00001^2 + 0.000008^2 + 0.00002^2)) # [kg], incertidumbre mediciones de masa en mt XP2002
m_PbNO3.2 <- c(0.79899, u_mtXPE205) # [g], lectura de la balanza para la masa de nitrato de plomo de la disoluci'on est'andar
#am_Pb <- c(207.2, 0.1/sqrt(3)) # [g/mol], masa molar de plomo
#am_N <- c(14.0068, 0.0006/sqrt(3)) # [g/mol], masa molar de nitr'ogeno
#am_O <- c(15.9994, 0.0005/sqrt(3)) # [g/mol], masa molar de ox'igeno
x_Pb_nit <- c(x_Pb$prop[1], x_Pb$prop[3]) # [g/g], fracci'on m'asica de plomo en nitrato de plomo
W_PbNO3.2 <- c(0.99999, 0.00005/sqrt(3)) # [g/g], fracci'on m'asica (pureza) del nitrato de plomo en el reactivo (DEBER'IA SER UN MRC)
B_PbNO3.2 <- c(MABC(rho_obj = 4.53, rho_air = airDensity(20, 1013.25, 46)), 1e-5) # [], Correcci'on por flotabilidad en aire del nitrato de plomo
mf_Pb_ref <- c(0.55619, u_mtXP2002) # [kg], masa final de la disoluci'on est'andar de plomo
B_Pb_ref <- c(MABC(rho_obj = 1, rho_air = airDensity(20, 1013.25, 46)), 1e-5) # [], Correcci'on por flotabilidad en aire de la disoluci'on de plomo
m0_Recip <- c(0.0562238, u_mtXPE204/1000) # [kg], masa del recipiente vac'io y seco
B_m0_Recip <- c(MABC(rho_obj = 0.940, rho_air = airDensity(20, 1013.25, 46)), 1e-5) # [], Correcci'on por flotabilidad en aire de recipiente de LDPE
am_Pb <- c(207.2, 0.1/sqrt(3)) # [g/mol], masa molar de plomo
m_Pb_ref <- c(mean(masasPb[6:14]), u_mtXPE204) # [g], masa de la al'icuota titulada de la disoluci'on est'andar de plomo
V_EDTA_ref <- c(mean(VeqTubbs[6:14]), 0) # [mL], (Incertidumbre incluida en el factor de reproducibilidad)
V_blank <- c(0, 1e-4) # [mL], volumen del blanco, la incertidumbre se asume igual a la divisiÃ³n de escala del titulador
c_EDTA_prop_TypB <- propagate(expr = c_EDTA_exp,
data = cbind(m_PbNO3.2, x_Pb_nit, W_PbNO3.2, B_PbNO3.2, mf_Pb_ref, B_Pb_ref,
m0_Recip, B_m0_Recip, am_Pb, m_Pb_ref, V_EDTA_ref, V_blank),
do.sim = FALSE)
barplot(diag(c_EDTA_prop_TypB$rel.contr))
c_EDTA_exp2 <- expression(((m_PbNO3.2 * x_Pb_nit * W_PbNO3.2 * B_PbNO3.2 /
((mf_Pb_ref * B_Pb_ref) - (m0_Recip * B_m0_Recip))) / am_Pb) * ((m_Pb_ref * B_Pb_ref) / (V_EDTA_ref - V_blank)) * Rep)
Rep <- c(1, sd(r2Tb[6:14])/mean(r2Tb[6:14])/sqrt(9))
c_EDTA_prop_comb <- propagate(expr = c_EDTA_exp2,
data = cbind(m_PbNO3.2, x_Pb_nit, W_PbNO3.2, B_PbNO3.2, mf_Pb_ref, B_Pb_ref,
m0_Recip, B_m0_Recip, am_Pb, m_Pb_ref, V_EDTA_ref, V_blank, Rep),
do.sim = FALSE)
barplot(diag(c_EDTA_prop_comb$rel.contr))
c_EDTA_prop_comb$prop[3] / c_EDTA_prop_comb$prop[1] * 100
(c_EDTA <- c(c_EDTA_prop_comb$prop[1], c_EDTA_prop_comb$prop[3]))
c_EDTA_prop_TypB <- propagate(expr = c_EDTA_exp,
data = cbind(m_PbNO3.2, x_Pb_nit, W_PbNO3.2, B_PbNO3.2, mf_Pb_ref, B_Pb_ref,
m0_Recip, B_m0_Recip, am_Pb, m_Pb_ref, V_EDTA_ref, V_blank),
do.sim = FALSE)
barplot(diag(c_EDTA_prop_TypB$rel.contr))
c_EDTA_prop_TypB$rel.contr
mean(masasPb[6:14]) * c_Pb.Std$prop[1] / mean(VeqTubbs[6:14])
mean(masasPb[6:14] * c_Pb.Std$prop[1] / VeqTubbs[6:14])
c_EDTA_exp <- expression(((m_PbNO3.2 * x_Pb_nit * W_PbNO3.2 * B_PbNO3.2 /
((mf_Pb_ref * B_Pb_ref) - (m0_Recip * B_m0_Recip))) / am_Pb) * ((m_Pb_ref * B_Pb_ref) / (V_EDTA_ref - V_blank)))
(u_mtXPE204 <- sqrt(2)*sqrt(0.0001^2 + 0.00007^2 + 0.0002^2)) # [g], incertidumbre mediciones de masa en mt XPE204 #preguntar a Andr'es o Diego
(u_mtXPE205 <- sqrt(2)*sqrt(0.00005^2 + 0.00002^2 + 0.00005^2)) # [g], incertidumbre mediciones de masa en mt XPE205
(u_mtXP2002 <- sqrt(2)*sqrt(0.00001^2 + 0.000008^2 + 0.00002^2)) # [kg], incertidumbre mediciones de masa en mt XP2002
m_PbNO3.2 <- c(0.79899, u_mtXPE205) # [g], lectura de la balanza para la masa de nitrato de plomo de la disoluci'on est'andar
#am_Pb <- c(207.2, 0.1/sqrt(3)) # [g/mol], masa molar de plomo
#am_N <- c(14.0068, 0.0006/sqrt(3)) # [g/mol], masa molar de nitr'ogeno
#am_O <- c(15.9994, 0.0005/sqrt(3)) # [g/mol], masa molar de ox'igeno
x_Pb_nit <- c(x_Pb$prop[1], x_Pb$prop[3]) # [g/g], fracci'on m'asica de plomo en nitrato de plomo
W_PbNO3.2 <- c(0.99999, 0.00005/sqrt(3)) # [g/g], fracci'on m'asica (pureza) del nitrato de plomo en el reactivo (DEBER'IA SER UN MRC)
B_PbNO3.2 <- c(MABC(rho_obj = 4.53, rho_air = airDensity(20, 1013.25, 46)), 1e-5) # [], Correcci'on por flotabilidad en aire del nitrato de plomo
mf_Pb_ref <- c(0.55619, u_mtXP2002) # [kg], masa final de la disoluci'on est'andar de plomo
B_Pb_ref <- c(MABC(rho_obj = 1, rho_air = airDensity(20, 1013.25, 46)), 1e-5) # [], Correcci'on por flotabilidad en aire de la disoluci'on de plomo
m0_Recip <- c(0.0562238, u_mtXPE204/1000) # [kg], masa del recipiente vac'io y seco
B_m0_Recip <- c(MABC(rho_obj = 0.940, rho_air = airDensity(20, 1013.25, 46)), 1e-5) # [], Correcci'on por flotabilidad en aire de recipiente de LDPE
am_Pb <- c(207.2, 0.1/sqrt(3)) # [g/mol], masa molar de plomo
m_Pb_ref <- c(mean(masasPb[6:14]), u_mtXPE204) # [g], masa de la al'icuota titulada de la disoluci'on est'andar de plomo
V_EDTA_ref <- c(mean(VeqTubbs[6:14]), 0) # [mL], (Incertidumbre incluida en el factor de reproducibilidad)
V_blank <- c(0, 1e-4) # [mL], volumen del blanco, la incertidumbre se asume igual a la divisiÃ³n de escala del titulador
c_EDTA_prop_TypB <- propagate(expr = c_EDTA_exp,
data = cbind(m_PbNO3.2, x_Pb_nit, W_PbNO3.2, B_PbNO3.2, mf_Pb_ref, B_Pb_ref,
m0_Recip, B_m0_Recip, am_Pb, m_Pb_ref, V_EDTA_ref, V_blank),
do.sim = FALSE)
barplot(diag(c_EDTA_prop_TypB$rel.contr))
c_EDTA_exp
cbind(m_PbNO3.2, x_Pb_nit, W_PbNO3.2, B_PbNO3.2, mf_Pb_ref, B_Pb_ref,
m0_Recip, B_m0_Recip, am_Pb, m_Pb_ref, V_EDTA_ref, V_blank)
mean(VeqTubbs[6:14])
m_Pb_ref <- c(mean(na.omit(masasPb[6:14])), u_mtXPE204) # [g], masa de la al'icuota titulada de la disoluci'on est'andar de plomo
V_EDTA_ref <- c(mean(na.omit(VeqTubbs[6:14])), 0) # [mL], (Incertidumbre incluida en el factor de reproducibilidad)
V_blank <- c(0, 1e-4) # [mL], volumen del blanco, la incertidumbre se asume igual a la divisiÃ³n de escala del titulador
c_EDTA_prop_TypB <- propagate(expr = c_EDTA_exp,
data = cbind(m_PbNO3.2, x_Pb_nit, W_PbNO3.2, B_PbNO3.2, mf_Pb_ref, B_Pb_ref,
m0_Recip, B_m0_Recip, am_Pb, m_Pb_ref, V_EDTA_ref, V_blank),
do.sim = FALSE)
barplot(diag(c_EDTA_prop_TypB$rel.contr))
c_EDTA_exp2 <- expression(((m_PbNO3.2 * x_Pb_nit * W_PbNO3.2 * B_PbNO3.2 /
((mf_Pb_ref * B_Pb_ref) - (m0_Recip * B_m0_Recip))) / am_Pb) * ((m_Pb_ref * B_Pb_ref) / (V_EDTA_ref - V_blank)) * Rep)
Rep <- c(1, sd(r2Tb[6:14])/mean(r2Tb[6:14])/sqrt(9))
c_EDTA_prop_comb <- propagate(expr = c_EDTA_exp2,
data = cbind(m_PbNO3.2, x_Pb_nit, W_PbNO3.2, B_PbNO3.2, mf_Pb_ref, B_Pb_ref,
m0_Recip, B_m0_Recip, am_Pb, m_Pb_ref, V_EDTA_ref, V_blank, Rep),
do.sim = FALSE)
barplot(diag(c_EDTA_prop_comb$rel.contr))
sd(r2Tb[6:14])
describe(r2Tb[6:14])
Rep <- c(1, sd(na.omit(r2Tb[6:14]))/mean(na.omit(r2Tb[6:14]))/sqrt(9))
c_EDTA_prop_comb <- propagate(expr = c_EDTA_exp2,
data = cbind(m_PbNO3.2, x_Pb_nit, W_PbNO3.2, B_PbNO3.2, mf_Pb_ref, B_Pb_ref,
m0_Recip, B_m0_Recip, am_Pb, m_Pb_ref, V_EDTA_ref, V_blank, Rep),
do.sim = FALSE)
barplot(diag(c_EDTA_prop_comb$rel.contr))
r2Tb
VeqTubbs <- c(
# 14 de abril de 2021
4.8281, 4.8321, 4.8679, 4.8567, 4.8568, 4.8306, 4.8522, 4.8589, 4.8672)
(r2Tb <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20])
masasPb[1:20]
describe(r2Tb)
masasPb <- c( # Masas (g) de las al'icuotas de
# 07 de abril de 2021
10.0693, 10.0315, 10.0441, 10.0096, 10.0094, 10.0012, 10.0138, 10.0234, 10.0007, 10.0102,
10.0118, 10.0106, 10.0176, 10.0235, 10.0091, 10.0156, 10.0301, 10.0250, 10.0120, 10.0167)
VeqTubbs <- c(
# 07 de abril de 2021
rep(NA, 2), 4.8782, 4.8606, 4.8616, 4.8601, 4.8646, 4.8679, 4.8579, 4.8601,
4.8606, 4.8579, 4.8649, 4.8651, 4.8596, 4.8612, 4.8683, 4.8661, 4.8587, 4.8621)
(EDTA1 <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20])
describe(EDTA1)
masasPb <- c( # Masas (g) de las al'icuotas de
# 07 de abril de 2021
10.0693, 10.0315, 10.0441, 10.0096, 10.0094, 10.0012, 10.0138, 10.0234, 10.0007, 10.0102,
10.0118, 10.0106, 10.0176, 10.0235, 10.0091, 10.0156, 10.0301, 10.0250, 10.0120, 10.0167)
VeqTubbs <- c(
# 07 de abril de 2021
rep(NA, 2), 4.8782, 4.8606, 4.8616, 4.8601, 4.8646, 4.8679, 4.8579, 4.8601,
4.8606, 4.8579, 4.8649, 4.8651, 4.8596, 4.8612, 4.8683, 4.8661, 4.8587, 4.8621)
boxplot(r2Tb ~ factors07Abril, ylim = c(0.009925, 0.00995))
(r2Tb <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20])
Rep <- c(1, sd(na.omit(r2Tb[6:14]))/mean(na.omit(r2Tb[6:14]))/sqrt(9))
c_EDTA_prop_comb <- propagate(expr = c_EDTA_exp2,
data = cbind(m_PbNO3.2, x_Pb_nit, W_PbNO3.2, B_PbNO3.2, mf_Pb_ref, B_Pb_ref,
m0_Recip, B_m0_Recip, am_Pb, m_Pb_ref, V_EDTA_ref, V_blank, Rep),
do.sim = FALSE)
barplot(diag(c_EDTA_prop_comb$rel.contr))
library(ggplot2)
library(propagate)
library(titRation)
library(masscor)
library(masscor)
PurezaPbNO3.2 <- c(0.99999, 0.00005/sqrt(3))
(x_Pb   <- propagate(expr = expression(Pb / (Pb + 2*(N + 3 * O))),
data = cbind(Pb = runif(n = 1e6, min = 207.2-0.1, max = 207.2+0.1),
N = runif(n = 1e6, min = 14.00643, max = 14.00728),
O = runif(n = 1e6, min = 15.99903, max = 15.99977)),
do.sim = TRUE, nsim = 1e5, cov = FALSE))
plot(x_Pb)
summary(x_Pb)
(v_Pb.Std  <- propagate(expr = expression(m_PbNO3.2 * w_PbNO3.2 * x_Pb / (mf_Pb - m0_Recip)),
data = cbind(m_PbNO3.2 = c(0.79899, 0.00012), w_PbNO3.2 = PurezaPbNO3.2,
x_Pb = c(x_Pb$prop[1], x_Pb$prop[3]), mf_Pb= c(0.55619, 0.00002),
m0_Recip= c(0.0562238, 0.00000012)),
do.sim = FALSE))
(c_Pb.Std   <- propagate(expr = expression(v_Pb / mw_Pb),
data = cbind(v_Pb = c(v_Pb.Std$prop[1], v_Pb.Std$prop[3]),
mw_Pb = c(207.2, 0.1/sqrt(3))),
do.sim = FALSE))
masasPb <- c( # Masas (g) de las al'icuotas de
# 14 de abril de 2021
10.0539, 10.0075, 10.0524, 10.0266, 10.0361, 10.0086, 10.0402, 10.0254, 10.0451)
VeqTubbs <- c(
# 14 de abril de 2021
4.8281, 4.8321, 4.8679, 4.8567, 4.8568, 4.8306, 4.8522, 4.8589, 4.8672)
masasPb <- c( # Masas (g) de las al'icuotas de
# 07 de abril de 2021
10.0693, 10.0315, 10.0441, 10.0096, 10.0094, 10.0012, 10.0138, 10.0234, 10.0007, 10.0102,
10.0118, 10.0106, 10.0176, 10.0235, 10.0091, 10.0156, 10.0301, 10.0250, 10.0120, 10.0167)
VeqTubbs <- c(
# 07 de abril de 2021
rep(NA, 2), 4.8782, 4.8606, 4.8616, 4.8601, 4.8646, 4.8679, 4.8579, 4.8601,
4.8606, 4.8579, 4.8649, 4.8651, 4.8596, 4.8612, 4.8683, 4.8661, 4.8587, 4.8621)
rel1 <- masasPb / VeqTubbs
describe(rel1)
plot(rel1)
outliers::grubbs.test(rel1)
rel1[1] <- NA
describe(rel1)
plot(rel1)
rel1 <- masasPb / VeqTubbs
describe(rel1)
plot(rel1)
outliers::grubbs.test(rel1)
rel1[1]
describe(rel1)
Vtar <- c(240, 960, 2000, 3000, 240, rep(480, 4)) # uL
Vbuf <- c(rep(5, 6), 5, 7, 9)
plot(rel1[2:6] ~ Vtar[2:6], pch = as.character(2:6))
plot(rel1[7:9] ~ Vbuf[7:9], pch = as.character(7:9))
factors07Abril <- c(rep('Amon5.5_HCl', 5), rep('Amon5.6_Tar1', 4), rep('Amon8_Tar2', 5),
rep('Acet2.5', 3), rep('Acet4', 3))
(EDTA1 <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20])
describe(EDTA1)
path <- './dat2021.04.07 .potenciometrias/'
files <- paste0(path, list.files(path = path))
# Linea final de los datos: grep("DETERM", readLines(files[1]), value = FALSE) - 2 - 25
rawCurves <- list()
Veq.void <- rep(NA, length(files))
VeqComplete <- data.frame(Veq1stDer1000 = Veq.void, Veq1stDer10000 = Veq.void, Veq1stDer100000 = Veq.void, Veq1stDer1000000 = Veq.void,
Veq1stDer10000trim = Veq.void#,
#Veq2ndDer1000 = Veq.void, Veq2ndDer10000 = Veq.void, Veq2ndDer100000 = Veq.void, Veq2ndDer1000000 = Veq.void
)
#pdf('TitPb070421.pdf', width = 18, height = 6)
factorsTotal <- c(paste0('7Abr.', factors07Abril))
files
#pdf('TitPb070421.pdf', width = 18, height = 6)
factorsTotal <- c(paste0('7Abr.', factors07Abril))
for (i in 1:20) {
rawCurves[[i]]   <- lims2t.curve(file = files[i], nrows = suppressWarnings(grep("DETERM", readLines(files[i]), value = FALSE)) - 3 - 25,
length = 1000, plot = FALSE)
#plotCurve(curve = rawCurves[[i]], main = paste0(i, ': ', factorsTotal[i]), plot = FALSE)# + xlim(c(4.9))
#    VeqComplete$Veq1stDer1000[i]    <- EP.1stDer(curve = rawCurves[[i]], length = 1000)
(VeqComplete$Veq1stDer10000[i]   <- EP.1stDer(curve = rawCurves[[i]], length = 10000, plot = TRUE))
(VeqComplete$Veq1stDer10000trim[i]   <- EP.1stDer(curve = rawCurves[[i]], length = 10000, sub = TRUE, plot = TRUE))
#    VeqComplete$Veq1stDer100000[i]  <- EP.1stDer(curve = rawCurves[[i]], length = 100000)
#    VeqComplete$Veq1stDer1000000[i] <- EP.1stDer(curve = rawCurves[[i]], length = 1000000)
}
(r2Fd <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000[1:20])
r2Fd[1] <- NA
(r2Fdtr <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000trim[1:20])
r2Fdtr[1] <- NA
(r2Tb <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20])
(VeqComplete$Veq1stDer10000[1:20] - VeqComplete$Veq1stDer10000trim[1:20])*1000
(VeqComplete$Veq1stDer10000[1:20] - VeqTubbs[1:20])*1000
(VeqComplete$Veq1stDer10000trim[1:20] - VeqTubbs[1:20])*1000
describe(r2Fd)
describe(r2Fdtr)
describe(r2Tb)
abs((r2Fd - r2Tb)/r2Fd * 100) # Diferencia entre las concentraciones calculadas con los distintos m'etodos (%)
abs((r2Fdtr - r2Tb)/r2Fdtr * 100) # Diferencia entre las concentraciones calculadas con los distintos m'etodos (%)
par(mfrow = c(1, 3))
boxplot(r2Tb ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fd ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fdtr ~ factors07Abril, ylim = c(0.009925, 0.00995))
plot(r2Fd, ylim = c(0.009925, 0.00995))
abline(v = c(0.5, 5.5, 9.5, 14.5, 17.5, 20.5))
plot(r2Tb, ylim = c(0.009925, 0.00995))
abline(v = c(0.5, 5.5, 9.5, 14.5, 17.5, 20.5))
plot(r2Fdtr, ylim = c(0.009925, 0.00995))
abline(v = c(0.5, 5.5, 9.5, 14.5, 17.5, 20.5))
summary(modelo2 <- aov(r2Fdtr ~ factors07Abril))
summary(modelo1 <- aov(r2Tb ~ factors07Abril))
TukeyHSD(modelo1)
t.test(r2Fd[18:20], r2Fd[15:17])
t.test(r2Fd[1:5], r2Fd[6:9])
t.test(r2Fd[6:9], r2Fd[10:13])
t.test(r2Tb[18:20], r2Tb[15:17])
t.test(r2Tb[1:5], r2Tb[6:9])
t.test(r2Tb[6:9], r2Tb[10:13])
describe(r2Fd[1:5]) # HCl
describe(r2Fd[6:9]) # Amonio (5.5 mL) y tartrato (240 uL)
describe(r2Fd[10:14]) # Amonio (8 mL) y tartrato (240 uL)
describe(r2Fd[6:14])
describe(r2Fdtr[6:14])
describe(r2Tb[6:14])
mean(masasPb[6:14]) * c_Pb.Std$prop[1] / mean(VeqTubbs[6:14])
mean(masasPb[6:14] * c_Pb.Std$prop[1] / VeqTubbs[6:14])
c_EDTA_exp <- expression(((m_PbNO3.2 * x_Pb_nit * W_PbNO3.2 * B_PbNO3.2 /
((mf_Pb_ref * B_Pb_ref) - (m0_Recip * B_m0_Recip))) / am_Pb) *
((m_Pb_ref * B_Pb_ref) / (V_EDTA_ref - V_blank)))
massSTD <- c(0.01, 0.5, 1, 10, 20, 50, 100, 150, 200, 210, 220)  ## [g]
indError <- c(0.00, 0.00, 0.00, -0.01, -0.01, -0.02, -0.01, 0.00, 0.01, 0.03, 0.02) ## [mg]
uncert <- c(0.04, 0.05, 0.05, 0.08, 0.10, 0.12, 0.20, 0.31, 0.40, 0.45, 0.47) / 2 ## [mg]
d <- 0.01 ## [mg]
MT.XPE.205 <- calibCert(balanceID = 'MT XPE 205', massSTD = massSTD,
indError = indError, uncert = uncert, d = d,
units = c('g', 'mg', 'mg', 'mg'),
classSTD = 'E2', certSTD = '1473 D-K 17296',
p = c(751.7, 751.8), ## [hPa]
Temp = c(19.7, 20.0), ## [deg.C]
h = c(44.8, 47.3), ## [%]
unitsENV = c('hPa', 'deg.C', '%'),
institution = 'Instituto Nacional de Metrologia de Colombia',
date = '2020/07/14')
usethis::use_data(MT.XPE.205, overwrite = TRUE)
setwd("~/CristhianParedes/masscor")
usethis::use_data(MT.XPE.205, overwrite = TRUE)
