describe(r2Fd)
describe(r2Fdtr)
describe(r2Tb)
abs((r2Fd - r2Tb)/r2Fd * 100) # Diferencia entre las concentraciones calculadas con los distintos m'etodos (%)
abs((r2Fdtr - r2Tb)/r2Fdtr * 100) # Diferencia entre las concentraciones calculadas con los distintos m'etodos (%)
relativeDiff(r2Fd, r2Fdtr)
relativeDiff(r2Fd, r2Tb)
relativeDiff(r2Fdtr, r2Tb)
par(mfrow = c(1, 3))
boxplot(r2Tb ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fd ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fdtr ~ factors07Abril, ylim = c(0.009925, 0.00995))
plot(r2Fd, ylim = c(0.009925, 0.00995))
abline(v = c(0.5, 5.5, 9.5, 14.5, 17.5, 20.5))
plot(r2Tb, ylim = c(0.009925, 0.00995))
abline(v = c(0.5, 5.5, 9.5, 14.5, 17.5, 20.5))
plot(r2Fdtr, ylim = c(0.009925, 0.00995))
abline(v = c(0.5, 5.5, 9.5, 14.5, 17.5, 20.5))
summary(modelo2 <- aov(r2Fdtr ~ factors07Abril))
summary(modelo1 <- aov(r2Tb ~ factors07Abril))
TukeyHSD(modelo1)
print(agricolae::LSD.test(y = modelo1, trt = 'factors07Abril'))
plot(agricolae::LSD.test(y = modelo1, trt = 'factors07Abril'))
t.test(r2Fd[18:20], r2Fd[15:17])
t.test(r2Fd[1:5], r2Fd[6:9])
t.test(r2Fd[6:9], r2Fd[10:13])
t.test(r2Tb[18:20], r2Tb[15:17])
t.test(r2Tb[1:5], r2Tb[6:9])
t.test(r2Tb[6:9], r2Tb[10:13])
describe(r2Tb[1:5]) # HCl
describe(r2Tb[6:9]) # Amonio (5.5 mL) y tartrato (240 uL)
describe(r2Tb[10:14]) # Amonio (8 mL) y tartrato (240 uL)
describe(r2Tb[1:5]) # HCl
describe(r2Tb[6:9]) # Amonio (5.5 mL) y tartrato (240 uL)
describe(r2Tb[10:14]) # Amonio (8 mL) y tartrato (240 uL)
relativeDiff(r2Tb, r2Tb)
describe(r2Fd[6:14])
describe(r2Fdtr[6:14])
describe(r2Tb[6:14])
mean(masasPb[6:14]) * c_Pb.Std$prop[1] / mean(VeqTubbs[6:14])
mean(masasPb[6:14] * c_Pb.Std$prop[1] / VeqTubbs[6:14])
c_EDTA_exp <- expression(((m_PbNO3.2 * x_Pb_nit * W_PbNO3.2 * B_PbNO3.2 /
((mf_Pb_ref * B_Pb_ref) - (m0_Recip * B_m0_Recip))) / am_Pb) * ((m_Pb_ref * B_Pb_ref) / (V_EDTA_ref - V_blank)))
(u_mtXPE204 <- sqrt(2)*sqrt(0.0001^2 + 0.00007^2 + 0.0002^2)) # [g], incertidumbre mediciones de masa en mt XPE204 #preguntar a Andr'es o Diego
(u_mtXPE205 <- sqrt(2)*sqrt(0.00005^2 + 0.00002^2 + 0.00005^2)) # [g], incertidumbre mediciones de masa en mt XPE205
(u_mtXP2002 <- sqrt(2)*sqrt(0.00001^2 + 0.000008^2 + 0.00002^2)) # [kg], incertidumbre mediciones de masa en mt XP2002
m_PbNO3.2 <- c(0.79899, u_mtXPE205) # [g], lectura de la balanza para la masa de nitrato de plomo de la disoluci'on est'andar
#am_Pb <- c(207.2, 0.1/sqrt(3)) # [g/mol], masa molar de plomo
#am_N <- c(14.0068, 0.0006/sqrt(3)) # [g/mol], masa molar de nitr'ogeno
#am_O <- c(15.9994, 0.0005/sqrt(3)) # [g/mol], masa molar de ox'igeno
x_Pb_nit <- c(x_Pb$prop[1], x_Pb$prop[3]) # [g/g], fracci'on m'asica de plomo en nitrato de plomo
W_PbNO3.2 <- c(0.99999, 0.00005/sqrt(3)) # [g/g], fracci'on m'asica (pureza) del nitrato de plomo en el reactivo (DEBER'IA SER UN MRC)
B_PbNO3.2 <- c(MABC(rho_obj = 4.53, rho_air = airDensity(20, 1013.25, 46)), 1e-5) # [], Correcci'on por flotabilidad en aire del nitrato de plomo
mf_Pb_ref <- c(0.55619, u_mtXP2002) # [kg], masa final de la disoluci'on est'andar de plomo
B_Pb_ref <- c(MABC(rho_obj = 1, rho_air = airDensity(20, 1013.25, 46)), 1e-5) # [], Correcci'on por flotabilidad en aire de la disoluci'on de plomo
m0_Recip <- c(0.0562238, u_mtXPE204/1000) # [kg], masa del recipiente vac'io y seco
B_m0_Recip <- c(MABC(rho_obj = 0.940, rho_air = airDensity(20, 1013.25, 46)), 1e-5) # [], Correcci'on por flotabilidad en aire de recipiente de LDPE
am_Pb <- c(207.2, 0.1/sqrt(3)) # [g/mol], masa molar de plomo
m_Pb_ref <- c(mean(masasPb[6:14]), u_mtXPE204) # [g], masa de la al'icuota titulada de la disoluci'on est'andar de plomo
V_EDTA_ref <- c(mean(VeqTubbs[6:14]), 0) # [mL], (Incertidumbre incluida en el factor de reproducibilidad)
V_blank <- c(0, 1e-4) # [mL], volumen del blanco, la incertidumbre se asume igual a la divisiÃ³n de escala del titulador
c_EDTA_prop_TypB <- propagate(expr = c_EDTA_exp,
data = cbind(m_PbNO3.2, x_Pb_nit, W_PbNO3.2, B_PbNO3.2, mf_Pb_ref, B_Pb_ref,
m0_Recip, B_m0_Recip, am_Pb, m_Pb_ref, V_EDTA_ref, V_blank),
do.sim = FALSE)
barplot(diag(c_EDTA_prop_TypB$rel.contr))
c_EDTA_exp2 <- expression(((m_PbNO3.2 * x_Pb_nit * W_PbNO3.2 * B_PbNO3.2 /
((mf_Pb_ref * B_Pb_ref) - (m0_Recip * B_m0_Recip))) / am_Pb) * ((m_Pb_ref * B_Pb_ref) / (V_EDTA_ref - V_blank)) * Rep)
Rep <- c(1, sd(r2Tb[6:14])/mean(r2Tb[6:14])/sqrt(9))
c_EDTA_prop_comb <- propagate(expr = c_EDTA_exp2,
data = cbind(m_PbNO3.2, x_Pb_nit, W_PbNO3.2, B_PbNO3.2, mf_Pb_ref, B_Pb_ref,
m0_Recip, B_m0_Recip, am_Pb, m_Pb_ref, V_EDTA_ref, V_blank, Rep),
do.sim = FALSE)
barplot(diag(c_EDTA_prop_comb$rel.contr))
c_EDTA_prop_comb$prop[3] / c_EDTA_prop_comb$prop[1] * 100
(c_EDTA <- c(c_EDTA_prop_comb$prop[1], c_EDTA_prop_comb$prop[3]))
boxplot(r2Tb ~ factors07Abril, ylim = c(0.009925, 0.00995))
dev.off(which = all)
dev.off(which = 1)
dev.off()
boxplot(r2Tb ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fd ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fdtr ~ factors07Abril, ylim = c(0.009925, 0.00995))
factors07Abril <- c(rep('NH4OH 5.5 mL + HCl 240 uL', 5), rep('NH4OH 5.5 mL + Tart 240 uL', 4),
rep('NH4OH 8 mL + Tart 240 uL', 5),
rep('AcOH/AcNa 2.5 mL', 3), rep('AcOH/AcNa 4 mL', 3))
boxplot(r2Tb ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fd ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fdtr ~ factors07Abril, ylim = c(0.009925, 0.00995))
(r2Fd <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000[1:20] * 1000)
r2Fd[1] <- NA
(r2Fdtr <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000trim[1:20] * 1000)
r2Fdtr[1] <- NA
(r2Tb <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20] * 1000)
boxplot(r2Fdtr ~ factors07Abril, ylim = c(9.925, 9.95))
boxplot(r2Fdtr ~ factors07Abril, ylim = c(9.925, 9.95), ylab = expression(paste(C[EDTA], ' [mmol k', g^{-1}, ']')))
boxplot(r2Fdtr ~ factors07Abril, ylim = c(9.925, 9.95),
ylab = expression(paste(C[EDTA], ' [mmol k', g^{-1}, ']')), xlab = '')
pdf('TitPb150407.pdf', width = 18, height = 6)
boxplot(r2Fdtr ~ factors07Abril, ylim = c(9.925, 9.95),
ylab = expression(paste(C[EDTA], ' [mmol k', g^{-1}, ']')), xlab = '')
dev.off()
pdf('TitPb150407.pdf', width = 12, height = 6)
boxplot(r2Fdtr ~ factors07Abril, ylim = c(9.925, 9.95),
ylab = expression(paste(C[EDTA], ' [mmol k', g^{-1}, ']')), xlab = '')
dev.off()
pdf('TitPb150407.pdf', width = 14, height = 6)
boxplot(r2Fdtr ~ factors07Abril, ylim = c(9.925, 9.95),
ylab = expression(paste(C[EDTA], ' [mmol k', g^{-1}, ']')), xlab = '')
dev.off()
boxplot(r2Tb ~ factors07Abril, ylim = c(9.925, 9.95))
boxplot(r2Fd ~ factors07Abril, ylim = c(9.925, 9.95))
pdf('TitPb070421.pdf', width = 14, height = 6)
boxplot(r2Fdtr ~ factors07Abril, ylim = c(9.925, 9.95),
ylab = expression(paste(C[EDTA], ' [mmol k', g^{-1}, ']')), xlab = '')
dev.off()
describe(r2Tb[1:5]) # HCl
describe(r2Tb[6:9]) # Amonio (5.5 mL) y tartrato (240 uL)
describe(r2Tb[10:14]) # Amonio (8 mL) y tartrato (240 uL)
factors07Abril
describe(r2Tb[1:5]) # HCl
describe(r2Tb[6:9]) # Amonio (5.5 mL) y tartrato (240 uL)
describe(r2Tb[10:14]) # Amonio (8 mL) y tartrato (240 uL)
describe(r2Tb[15:17]) # Amonio (8 mL) y tartrato (240 uL)
describe(r2Tb[18:20]) # Amonio (8 mL) y tartrato (240 uL)
boxplot(r2Tb ~ factors07Abril, ylim = c(9.925, 9.95))
pdf('TitPb070421.pdf', width = 14, height = 6)
boxplot(r2Tb ~ factors07Abril, ylim = c(9.925, 9.95),
ylab = expression(paste(C[EDTA], ' [mmol k', g^{-1}, ']')), xlab = '')
boxplot(r2Fd ~ factors07Abril, ylim = c(9.925, 9.95),
ylab = expression(paste(C[EDTA], ' [mmol k', g^{-1}, ']')), xlab = '')
boxplot(r2Fdtr ~ factors07Abril, ylim = c(9.925, 9.95),
ylab = expression(paste(C[EDTA], ' [mmol k', g^{-1}, ']')), xlab = '')
dev.off()
summary(modelo1 <- aov(r2Tb ~ factors07Abril))
TukeyHSD(modelo1)
print(agricolae::LSD.test(y = modelo1, trt = 'factors07Abril'))
plot(agricolae::LSD.test(y = modelo1, trt = 'factors07Abril'))
summary(modelo1 <- aov(r2Tb ~ factors07Abril))
t.test(r2Tb[18:20], r2Tb[15:17])
t.test(r2Tb[1:5], r2Tb[6:9])
t.test(r2Tb[6:9], r2Tb[10:13])
var.test(r2Tb[10:14], r2Tb[15:20])
t.test(r2Tb[10:14], r2Tb[15:20])
car::leveneTest(r2Tb ~ factors07Abril)
library(ggplot2)
library(propagate)
library(titRation)
PurezaPbNO3.2 <- c(0.99999, 0.00005/sqrt(3))
(x_Pb   <- propagate(expr = expression(Pb / (Pb + 2*(N + 3 * O))),
data = cbind(Pb = runif(n = 1e6, min = 207.2-0.1, max = 207.2+0.1),
N = runif(n = 1e6, min = 14.00643, max = 14.00728),
O = runif(n = 1e6, min = 15.99903, max = 15.99977)),
do.sim = TRUE, nsim = 1e5, cov = FALSE))
plot(x_Pb)
summary(x_Pb)
(v_Pb.Std  <- propagate(expr = expression(m_PbNO3.2 * w_PbNO3.2 * x_Pb / (mf_Pb - m0_Recip)),
data = cbind(m_PbNO3.2 = c(0.79899, 0.00012), w_PbNO3.2 = PurezaPbNO3.2,
x_Pb = c(x_Pb$prop[1], x_Pb$prop[3]), mf_Pb= c(0.55619, 0.00002),
m0_Recip= c(0.0562238, 0.00000012)),
do.sim = FALSE))
(c_Pb.Std   <- propagate(expr = expression(v_Pb / mw_Pb),
data = cbind(v_Pb = c(v_Pb.Std$prop[1], v_Pb.Std$prop[3]),
mw_Pb = c(207.2, 0.1/sqrt(3))),
do.sim = FALSE))
masasPb <- c( # Masas (g) de las al'icuotas de
# 14 de abril de 2021
10.0539, 10.0075, 10.0524, 10.0266, 10.0361, 10.0086, 10.0402, 10.0254, 10.0451)
VeqTubbs <- c(
# 14 de abril de 2021
4.8281, 4.8321, 4.8679, 4.8567, 4.8568, 4.8306, 4.8522, 4.8589, 4.8672)
(EDTA <- masasPb * c_Pb.Std$prop[1]/ VeqTubbs)
describe(EDTA)
plot(EDTA)
outliers::grubbs.test(EDTA)
EDTA[1] <- NA
describe(EDTA)
plot(EDTA)
describe(EDTA)
plot(EDTA)
plot(EDTA[2:7] ~ Vtar[2:7], pch = as.character(2:7))
describe(EDTA[2:7])
Vtar <- c(240, 960, 2000, 3000, 240, rep(480, 4)) # uL
Vbuf <- c(rep(5, 7), 7, 9)
plot(EDTA[2:7] ~ Vtar[2:7], pch = as.character(2:7))
factors07Abril <- c(rep('Amon5.5_HCl', 5), rep('Amon5.6_Tar1', 4), rep('Amon8_Tar2', 5),
rep('Acet2.5', 3), rep('Acet4', 3))
(EDTA1 <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20])
describe(EDTA1)
(EDTA <- masasPb * c_Pb.Std$prop[1]/ VeqTubbs)
describe(EDTA)
plot(EDTA)
outliers::grubbs.test(EDTA)
EDTA[1] <- NA
describe(EDTA)
plot(EDTA)
masasPb <- c( # Masas (g) de las al'icuotas de
# 07 de abril de 2021
10.0693, 10.0315, 10.0441, 10.0096, 10.0094, 10.0012, 10.0138, 10.0234, 10.0007, 10.0102,
10.0118, 10.0106, 10.0176, 10.0235, 10.0091, 10.0156, 10.0301, 10.0250, 10.0120, 10.0167)
VeqTubbs <- c(
# 07 de abril de 2021
rep(NA, 2), 4.8782, 4.8606, 4.8616, 4.8601, 4.8646, 4.8679, 4.8579, 4.8601,
4.8606, 4.8579, 4.8649, 4.8651, 4.8596, 4.8612, 4.8683, 4.8661, 4.8587, 4.8621)
rel1 <- masasPb / VeqTubbs
describe(rel1)
plot(rel1)
outliers::grubbs.test(rel1)
rel1[1] <- NA
describe(rel1)
plot(rel1)
Vtar <- c(240, 960, 2000, 3000, 240, rep(480, 4)) # uL
Vbuf <- c(rep(5, 7), 7, 9)
plot(EDTA[2:7] ~ Vtar[2:7], pch = as.character(2:7))
plot(EDTA[6:9] ~ Vbuf[6:9], pch = as.character(6:9))
plot(EDTA[2:7] ~ Vtar[2:7], pch = as.character(2:7))
describe(EDTA[2:7])
describe(EDTA[7:9])
plot(EDTA[6:9] ~ Vbuf[6:9], pch = as.character(6:9))
factors07Abril <- c(rep('Amon5.5_HCl', 5), rep('Amon5.6_Tar1', 4), rep('Amon8_Tar2', 5),
rep('Acet2.5', 3), rep('Acet4', 3))
(EDTA1 <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20])
describe(EDTA1)
path <- './dat2021.04.07 .potenciometrias/'
files <- paste0(path, list.files(path = path))
# Linea final de los datos: grep("DETERM", readLines(files[1]), value = FALSE) - 2 - 25
rawCurves <- list()
Veq.void <- rep(NA, length(files))
VeqComplete <- data.frame(Veq1stDer1000 = Veq.void, Veq1stDer10000 = Veq.void, Veq1stDer100000 = Veq.void, Veq1stDer1000000 = Veq.void,
Veq1stDer10000trim = Veq.void#,
#Veq2ndDer1000 = Veq.void, Veq2ndDer10000 = Veq.void, Veq2ndDer100000 = Veq.void, Veq2ndDer1000000 = Veq.void
)
#pdf('TitPb070421.pdf', width = 18, height = 6)
factorsTotal <- c(paste0('7Abr.', factors07Abril))
for (i in 1:20) {
rawCurves[[i]]   <- lims2t.curve(file = files[i], nrows = suppressWarnings(grep("DETERM", readLines(files[i]), value = FALSE)) - 3 - 25,
length = 1000, plot = FALSE)
#plotCurve(curve = rawCurves[[i]], main = paste0(i, ': ', factorsTotal[i]), plot = FALSE)# + xlim(c(4.9))
#    VeqComplete$Veq1stDer1000[i]    <- EP.1stDer(curve = rawCurves[[i]], length = 1000)
(VeqComplete$Veq1stDer10000[i]   <- EP.1stDer(curve = rawCurves[[i]], length = 10000, plot = TRUE))
(VeqComplete$Veq1stDer10000trim[i]   <- EP.1stDer(curve = rawCurves[[i]], length = 10000, sub = TRUE, plot = TRUE))
#    VeqComplete$Veq1stDer100000[i]  <- EP.1stDer(curve = rawCurves[[i]], length = 100000)
#    VeqComplete$Veq1stDer1000000[i] <- EP.1stDer(curve = rawCurves[[i]], length = 1000000)
}
(r2Fd <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000[1:20])
r2Fd[1] <- NA
(r2Fdtr <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqComplete$Veq1stDer10000trim[1:20])
r2Fdtr[1] <- NA
(r2Tb <- masasPb[1:20] * c_Pb.Std$prop[1] / VeqTubbs[1:20])
(VeqComplete$Veq1stDer10000[1:20] - VeqComplete$Veq1stDer10000trim[1:20])*1000
(VeqComplete$Veq1stDer10000[1:20] - VeqTubbs[1:20])*1000
(VeqComplete$Veq1stDer10000trim[1:20] - VeqTubbs[1:20])*1000
describe(r2Fd)
describe(r2Fdtr)
describe(r2Tb)
abs((r2Fd - r2Tb)/r2Fd * 100) # Diferencia entre las concentraciones calculadas con los distintos m'etodos (%)
abs((r2Fdtr - r2Tb)/r2Fdtr * 100) # Diferencia entre las concentraciones calculadas con los distintos m'etodos (%)
par(mfrow = c(1, 3))
boxplot(r2Tb ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fd ~ factors07Abril, ylim = c(0.009925, 0.00995))
boxplot(r2Fdtr ~ factors07Abril, ylim = c(0.009925, 0.00995))
plot(r2Fd, ylim = c(0.009925, 0.00995))
abline(v = c(0.5, 5.5, 9.5, 14.5, 17.5, 20.5))
plot(r2Tb, ylim = c(0.009925, 0.00995))
abline(v = c(0.5, 5.5, 9.5, 14.5, 17.5, 20.5))
plot(r2Fdtr, ylim = c(0.009925, 0.00995))
abline(v = c(0.5, 5.5, 9.5, 14.5, 17.5, 20.5))
summary(modelo2 <- aov(r2Fdtr ~ factors07Abril))
summary(modelo1 <- aov(r2Tb ~ factors07Abril))
TukeyHSD(modelo1)
t.test(r2Fd[18:20], r2Fd[15:17])
t.test(r2Fd[1:5], r2Fd[6:9])
t.test(r2Fd[6:9], r2Fd[10:13])
t.test(r2Tb[18:20], r2Tb[15:17])
t.test(r2Tb[1:5], r2Tb[6:9])
t.test(r2Tb[6:9], r2Tb[10:13])
describe(r2Fd[1:5]) # HCl
describe(r2Fd[6:9]) # Amonio (5.5 mL) y tartrato (240 uL)
describe(r2Fd[10:14]) # Amonio (8 mL) y tartrato (240 uL)
describe(r2Fd[6:14])
describe(r2Fdtr[6:14])
describe(r2Tb[6:14])
mean(masasPb[6:14]) * c_Pb.Std$prop[1] / mean(VeqTubbs[6:14])
mean(masasPb[6:14] * c_Pb.Std$prop[1] / VeqTubbs[6:14])
c_EDTA_exp <- expression(((m_PbNO3.2 * x_Pb_nit * W_PbNO3.2 * B_PbNO3.2 /
((mf_Pb_ref * B_Pb_ref) - (m0_Recip * B_m0_Recip))) / am_Pb) * ((m_Pb_ref * B_Pb_ref) / (V_EDTA_ref - V_blank)))
(u_mtXPE204 <- sqrt(2)*sqrt(0.0001^2 + 0.00007^2 + 0.0002^2)) # [g], incertidumbre mediciones de masa en mt XPE204 #preguntar a Andr'es o Diego
(u_mtXPE205 <- sqrt(2)*sqrt(0.00005^2 + 0.00002^2 + 0.00005^2)) # [g], incertidumbre mediciones de masa en mt XPE205
(u_mtXP2002 <- sqrt(2)*sqrt(0.00001^2 + 0.000008^2 + 0.00002^2)) # [kg], incertidumbre mediciones de masa en mt XP2002
m_PbNO3.2 <- c(0.79899, u_mtXPE205) # [g], lectura de la balanza para la masa de nitrato de plomo de la disoluci'on est'andar
#am_Pb <- c(207.2, 0.1/sqrt(3)) # [g/mol], masa molar de plomo
#am_N <- c(14.0068, 0.0006/sqrt(3)) # [g/mol], masa molar de nitr'ogeno
#am_O <- c(15.9994, 0.0005/sqrt(3)) # [g/mol], masa molar de ox'igeno
x_Pb_nit <- c(x_Pb$prop[1], x_Pb$prop[3]) # [g/g], fracci'on m'asica de plomo en nitrato de plomo
plot(EDTA[2:7] ~ Vtar[2:7])
plot(EDTA[6:9] ~ Vbuf[6:9])
summary(lm(EDTA[2:7] ~ Vtar[2:7]))
dev.off()
barplot(diag(c_EDTA_prop_comb$rel.contr))
library(ggplot2)
library(propagate)
library(titRation)
PurezaPbNO3.2 <- c(0.99999, 0.00005/sqrt(3))
(x_Pb   <- propagate(expr = expression(Pb / (Pb + 2*(N + 3 * O))),
data = cbind(Pb = runif(n = 1e6, min = 207.2-0.1, max = 207.2+0.1),
N = runif(n = 1e6, min = 14.00643, max = 14.00728),
O = runif(n = 1e6, min = 15.99903, max = 15.99977)),
do.sim = TRUE, nsim = 1e5, cov = FALSE))
plot(x_Pb)
summary(x_Pb)
(v_Pb.Std  <- propagate(expr = expression(m_PbNO3.2 * w_PbNO3.2 * x_Pb / mf_Pb),
data = cbind(m_PbNO3.2 = c(0.80157, 0.00012), w_PbNO3.2 = PurezaPbNO3.2,
x_Pb = c(x_Pb$prop[1], x_Pb$prop[3]), mf_Pb= c(0.50493, 0.00002)),
do.sim = FALSE))
(c_Pb.Std   <- propagate(expr = expression(v_Pb / mw_Pb),
data = cbind(v_Pb = c(v_Pb.Std$prop[1], v_Pb.Std$prop[3]),
mw_Pb = c(207.2, 0.1/sqrt(3))),
do.sim = FALSE))
masasPb <- c( # Masas (g) de las al'icuotas de
# 29 de mayo de 2021
10.01508, 10.04154, 10.02179, 10.04825, 10.02651, 10.08375, 10.03109, 10.02350, 10.04254, 09.97759,
10.17122, 10.03642, 20.06482, 09.99576, 09.99333, 20.10561, 20.09478, 10.02172, 10.02028, 20.13090)
VeqTubbs <- c(
# 29 de mayo de 2021
4.7632, 4.7777, 4.7687, 4.7839, 4.7754, 4.8042, 4.7796, 4.7786, 4.7882,     NA,
4.8460, 4.7131, 9.5591, 4.7606, 4.7521, 9.5763, 9.5696, 4.7674, 4.7717, 9.5855)
(EDTA <- masasPb * c_Pb.Std$prop[1]/ VeqTubbs)
#describe(EDTA)
#plot(EDTA)
#outliers::grubbs.test(EDTA)
EDTA[12] <- NA
describe(EDTA)
plot(EDTA)
# tubos falcon, 10 mL de muestra con 240-480 uL de tartrato y 7 mL de buffer:
describe(EDTA[c(1:2, 18, 3)])
plot(EDTA[c(1:2, 18, 3)])
abline(v = c(3.5))
# tubos falcon, 10 mL de muestra con 240-480 uL de tartrato y 7-5 mL de buffer:
describe(EDTA[c(1:2, 18, 3, 4, 11)])
plot(EDTA[c(1:2, 18, 3, 4, 11)])
abline(v = c(3.5, 4.5))
# tubos falcon, 10 mL de muestra con 240-480 uL de tartrato y 7-5 mL de buffer, LOS ultimos tres tienen [acido:
describe(EDTA[c(1:2, 18, 3, 4, 11, 15, 19, 14)])
plot(EDTA[c(1:2, 18, 3, 4, 11, 15, 19, 14)])
abline(v = c(3.5, 4.5, 6.5))
# Falcon vs PP anchos
plot(EDTA[c(1:2, 18, 3, 4, 11, 15, 19, 14, 5:10, 13, 16:17, 20)])
abline(v = c(3.5, 4.5, 6.5, 9.5, 12.5, 15.5))
factors <- as.factor(c('a1', 'a1', 'a2', 'a3', rep('b1', 3), rep('b2', 3),
'a3', 'a4', 'b3', 'a4', 'a4', rep('b3', 2), 'a1', 'a4', 'b3'))
plot(EDTA ~ factors)
factors <- as.factor(c(rep('a1', 3), 'a3', rep('b1', 3), rep('b2', 3),
'a3', 'a4', 'b3', 'a4', 'a4', rep('b3', 2), 'a1', 'a4', 'b3'))
plot(EDTA ~ factors)
plot(EDTA[c(1:4, 11:12, 14:15, 18:19)], col = c(1, 1, 2, 3, 3, 4, 5, 6, 1, 6))
# Tubos pp
describe(EDTA[c(5:10, 13, 16:17, 20)])
describe(EDTA[5:7]) # 10 mL muestra + 10 mL agua
describe(EDTA[8:10])
describe(EDTA[c(13, 16:17, 20)])
t.test(x = EDTA[5:7], y = EDTA[c(13, 16:17, 20)])
relativeDiff(x = EDTA[5:7], y = EDTA[c(13, 16:17, 20)])
relativeDiff(x = EDTA[5:7], y = EDTA[8:9])
relativeDiff(x = EDTA[c(1:2, 18)], y = EDTA[5:7])
plot(EDTA[c(5:10, 13, 16:17, 20)], col = c(1, 1, 1, 2, 2, 2, 3, 3, 3, 3))
masaH2O  <- as.factor(c(rep(0, 4), rep(10, 3), rep(20, 3), rep(0, 10)))
plot(EDTA ~ masaH2O)
tartrato <- as.factor(c(240, 240, 480))
buffer   <- as.factor(c(7, 7, 7))
ApMassPb <- as.factor(c(rep(10, 12), 20, rep(10, 2), rep(20, 2), rep(10, 2), 20))
#
# Tubos pp
describe(EDTA[c(5:10, 13, 16:17, 20)])
describe(EDTA[5:7]) # 10 mL muestra + 10 mL agua
describe(EDTA[8:10])
describe(EDTA[c(13, 16:17, 20)])
t.test(x = EDTA[5:7], y = EDTA[c(13, 16:17, 20)])
relativeDiff(x = EDTA[5:7], y = EDTA[c(13, 16:17, 20)])
relativeDiff(x = EDTA[5:7], y = EDTA[8:9])
relativeDiff(x = EDTA[c(1:2, 18)], y = EDTA[5:7])
plot(EDTA[c(5:10, 13, 16:17, 20)], col = c(1, 1, 1, 2, 2, 2, 3, 3, 3, 3))
masaH2O  <- as.factor(c(rep(0, 4), rep(10, 3), rep(20, 3), rep(0, 10)))
plot(EDTA ~ masaH2O)
tartrato <- as.factor(c(240, 240, 480))
buffer   <- as.factor(c(7, 7, 7))
ApMassPb <- as.factor(c(rep(10, 12), 20, rep(10, 2), rep(20, 2), rep(10, 2), 20))
PurezaPbNO3.2 <- c(0.99999, 0.00005/sqrt(3))
(x_Pb   <- propagate(expr = expression(Pb / (Pb + 2*(N + 3 * O))),
data = cbind(Pb = runif(n = 1e6, min = 207.2-0.1, max = 207.2+0.1),
N = runif(n = 1e6, min = 14.00643, max = 14.00728),
O = runif(n = 1e6, min = 15.99903, max = 15.99977)),
do.sim = TRUE, nsim = 1e5, cov = FALSE))
plot(x_Pb)
summary(x_Pb)
(c_Pb.Std   <- propagate(expr = expression(v_Pb / mw_Pb),
data = cbind(v_Pb = c(v_Pb.Std$prop[1], v_Pb.Std$prop[3]),
mw_Pb = c(207.2, 0.1/sqrt(3))),
do.sim = FALSE))
(v_Pb.Std  <- propagate(expr = expression(m_PbNO3.2 * w_PbNO3.2 * x_Pb / mf_Pb),
data = cbind(m_PbNO3.2 = c(0.80157, 0.00012), w_PbNO3.2 = PurezaPbNO3.2,
x_Pb = c(x_Pb$prop[1], x_Pb$prop[3]), mf_Pb= c(0.50493, 0.00002)),
do.sim = FALSE))
masasPb <- c( # Masas (g) de las al'icuotas de
# 29 de mayo de 2021
10.01508, 10.04154, 10.02179, 10.04825, 10.02651, 10.08375, 10.03109, 10.02350, 10.04254, 09.97759,
10.17122, 10.03642, 20.06482, 09.99576, 09.99333, 20.10561, 20.09478, 10.02172, 10.02028, 20.13090)
VeqTubbs <- c(
# 29 de mayo de 2021
4.7632, 4.7777, 4.7687, 4.7839, 4.7754, 4.8042, 4.7796, 4.7786, 4.7882,     NA,
4.8460, 4.7131, 9.5591, 4.7606, 4.7521, 9.5763, 9.5696, 4.7674, 4.7717, 9.5855)
(EDTA <- masasPb * c_Pb.Std$prop[1]/ VeqTubbs)
(EDTA <- masasPb * c_Pb.Std$prop[1]/ VeqTubbs)
#describe(EDTA)
#plot(EDTA)
#outliers::grubbs.test(EDTA)
EDTA[12] <- NA
describe(EDTA)
plot(EDTA)
# tubos falcon, 10 mL de muestra con 240-480 uL de tartrato y 7 mL de buffer:
describe(EDTA[c(1:2, 18, 3)])
plot(EDTA[c(1:2, 18, 3)])
abline(v = c(3.5))
# tubos falcon, 10 mL de muestra con 240-480 uL de tartrato y 7-5 mL de buffer:
describe(EDTA[c(1:2, 18, 3, 4, 11)])
plot(EDTA[c(1:2, 18, 3, 4, 11)])
abline(v = c(3.5, 4.5))
# tubos falcon, 10 mL de muestra con 240-480 uL de tartrato y 7-5 mL de buffer, LOS ultimos tres tienen [acido:
describe(EDTA[c(1:2, 18, 3, 4, 11, 15, 19, 14)])
plot(EDTA[c(1:2, 18, 3, 4, 11, 15, 19, 14)])
abline(v = c(3.5, 4.5, 6.5))
# Falcon vs PP anchos
plot(EDTA[c(1:2, 18, 3, 4, 11, 15, 19, 14, 5:10, 13, 16:17, 20)])
abline(v = c(3.5, 4.5, 6.5, 9.5, 12.5, 15.5))
factors <- as.factor(c('a1', 'a1', 'a2', 'a3', rep('b1', 3), rep('b2', 3),
'a3', 'a4', 'b3', 'a4', 'a4', rep('b3', 2), 'a1', 'a4', 'b3'))
plot(EDTA ~ factors)
# Falcon vs PP anchos
plot(EDTA[c(1:2, 18, 3, 4, 11, 15, 19, 14, 5:10, 13, 16:17, 20)])
abline(v = c(3.5, 4.5, 6.5, 9.5, 12.5, 15.5))
# Tubos pp
describe(EDTA[c(5:10, 13, 16:17, 20)])
describe(EDTA[5:7]) # 10 mL muestra + 10 mL agua
describe(EDTA[5:7]) # 10 mL muestra + 10 mL agua
describe(EDTA[8:10])
describe(EDTA[c(13, 16:17, 20)])
t.test(x = EDTA[5:7], y = EDTA[c(13, 16:17, 20)])
relativeDiff(x = EDTA[5:7], y = EDTA[c(13, 16:17, 20)])
relativeDiff(x = EDTA[5:7], y = EDTA[8:9])
relativeDiff(x = EDTA[c(1:2, 18)], y = EDTA[5:7])
plot(EDTA[c(5:10, 13, 16:17, 20)], col = c(1, 1, 1, 2, 2, 2, 3, 3, 3, 3))
masaH2O  <- as.factor(c(rep(0, 4), rep(10, 3), rep(20, 3), rep(0, 10)))
plot(EDTA ~ masaH2O)
tartrato <- as.factor(c(240, 240, 480))
buffer   <- as.factor(c(7, 7, 7))
ApMassPb <- as.factor(c(rep(10, 12), 20, rep(10, 2), rep(20, 2), rep(10, 2), 20))
#
#
#
library(ggplot2)
library(propagate)
library(titRation)
library(rsm)
PurezaPbNO3.2 <- c(0.99999, 0.00005/sqrt(3))
(x_Pb   <- propagate(expr = expression(Pb / (Pb + 2*(N + 3 * O))),
data = cbind(Pb = runif(n = 1e6, min = 207.2-0.1, max = 207.2+0.1),
N = runif(n = 1e6, min = 14.00643, max = 14.00728),
O = runif(n = 1e6, min = 15.99903, max = 15.99977)),
do.sim = TRUE, nsim = 1e5, cov = FALSE))
plot(x_Pb)
summary(x_Pb)
(c_Pb.Std   <- propagate(expr = expression(v_Pb / mw_Pb),
data = cbind(v_Pb = c(v_Pb.Std$prop[1], v_Pb.Std$prop[3]),
mw_Pb = c(207.2, 0.1/sqrt(3))),
do.sim = FALSE))
(v_Pb.Std  <- propagate(expr = expression(m_PbNO3.2 * w_PbNO3.2 * x_Pb / mf_Pb),
data = cbind(m_PbNO3.2 = c(0.8003, 0.0002), w_PbNO3.2 = PurezaPbNO3.2,
x_Pb = c(x_Pb$prop[1], x_Pb$prop[3]), mf_Pb= c(0.50019, 0.00003)),
do.sim = FALSE))
set.seed(0)
design1 <- bbd(k = 3, n0 = 3, randomize = TRUE,
coding = list(x1 ~ (V.buff - 10) / 5, x2 ~ (C.buff - 1) / 0.5, x3 ~ (V.Tart - 240) / 80))
design1
masasPb <- c(10.1050, 10.1312, 10.0953, 10.0867, 10.0801, 10.0722, 10.0586, 10.0806, 10.1082, 10.0853,
10.0728, 10.0804, 10.0757, 10.1718, 10.0808)
V.Tubbs <- c(4.8527, 4.8674, 4.8664, 4.8434, 4.8396, 4.8360, 4.8291, 4.8397, 4.8534, 4.8393,
4.8337, 4.8380, 4.8362, NA, 4.8380)
n1 <- 15
(EDTA <- masasPb[1:n1] * c_Pb.Std$prop[1] / V.Tubbs)
plot(EDTA, ylim = c(0.01002, 0.01007)); describe(EDTA); cat('\n'); describe(EDTA[-3])
outliers::grubbs.test(EDTA, type = 10)
outliers::grubbs.test(EDTA, type = 20)
outliers::grubbs.test(EDTA, type = 11)
# Correcciones para los outliers
masasPb[c(2:3, 14)] <- c(10.1939, 10.1428, 10.1718)
V.Tubbs[c(2:3, 14)] <- c(4.8938, 4.87010, 4.8834)
(EDTA <- masasPb[1:n1]  * c_Pb.Std$prop[1] / V.Tubbs)
plot(EDTA, ylim = c(0.01002, 0.01007))
plot(EDTA)
describe(EDTA)#; cat('\n'); describe(EDTA[-3])
describe(EDTA[c(11, 13, 15)]) # R'eplicas
outliers::grubbs.test(EDTA, type = 10)
outliers::grubbs.test(EDTA, type = 20)
outliers::grubbs.test(EDTA, type = 11)
design1$EDTA <- EDTA
design1
citation(rsm)
citation('rsm')
set.seed(0)
design1 <- bbd(k = 3, n0 = 3, randomize = TRUE,
coding = list(x1 ~ (V.buff - 10) / 5, x2 ~ (C.buff - 1) / 0.5, x3 ~ (V.Tart - 240) / 80))
design1
plot(EDTA ~ V.buff, data = D1)
